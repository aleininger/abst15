library(car)
# setwd
setwd('/home/arndt/Dropbox/01 PhD/02 projects/rechenschaftsberichte')
# open data
# exp <- read.csv('data/Expenditures_ver8_formatted.csv')
exp <- read.csv2('data/Expenditures_ver8.csv', sep = ',', stringsAsFactors = F)
# format data
exp$voteshare <- as.numeric(sub('%', '', exp$voteshare)) # make vote share numeric
exp$pop_all <- gsub(',', '', exp$pop_all)
exp[, c('exp_nom', 'exp_real', 'exp_capita_nom', 'exp_capita_real',
'infl_factor_2013', 'pop_all', 'pop_eligible', 'exp_voter', 'real_gdpgro_stat')] <- apply(exp[,c('exp_nom', 'exp_real', 'exp_capita_nom',
'exp_capita_real', 'infl_factor_2013',
'pop_all', 'pop_eligible', 'exp_voter',
'real_gdpgro_stat')],
2, as.numeric)
exp$party <- factor(exp$party)
exp$state <- factor(exp$state)
# add party colors
exp$color <- as.character('black') # CDU
exp$color[which(exp$party == 'FDP')] <- 'yellow' # FDP
exp$color[which(exp$party == 'GRUENE')] <- 'green' # GRUENE
exp$color[which(exp$party == 'LINKE')] <- 'purple' # LINKE
exp$color[which(exp$party == 'SPD')] <- 'red' # SPD
# correct state names
exp$state <- as.character(exp$state)
exp[which(exp$state == 'bay'), 'state'] <- 'BY'
exp[which(exp$state == 'ber'), 'state'] <- 'BE'
exp[which(exp$state == 'bra'), 'state'] <- 'BB'
exp[which(exp$state == 'bre'), 'state'] <- 'HB'
exp[which(exp$state == 'bw'), 'state'] <- 'BW'
exp[which(exp$state == 'ham'), 'state'] <- 'HH'
exp[which(exp$state == 'hes'), 'state'] <- 'HE'
exp[which(exp$state == 'mv'), 'state'] <- 'MV'
exp[which(exp$state == 'nie'), 'state'] <- 'NI'
exp[which(exp$state == 'nrw'), 'state'] <- 'NW'
exp[which(exp$state == 'rp'), 'state'] <- 'RP'
exp[which(exp$state == 'sa'), 'state'] <- 'SL'
exp[which(exp$state == 'saar'), 'state'] <- 'SN'
exp[which(exp$state == 'sax'), 'state'] <- 'ST'
exp[which(exp$state == 'sh'), 'state'] <- 'SH'
exp[which(exp$state == 'thu'), 'state'] <- 'TH'
exp$state <- factor(exp$state)
# datakey
# datakey <- data.frame(varnames = names(exp), description = '') # create datakey
# write.csv(datakey, 'data/datakey.csv', quote = T)
# Rescaled variables
exp$exp_realT <- exp$exp_real/1000
exp$exp_realM <- exp$exp_real/1000000
# add party members (national)
ahosz21_tab1 <- read.csv2('data/AHOSZ21_tab1.csv', skip = 2, sep = ',',
fileEncoding = 'ISO-8859-15', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
ahosz21_tab1 <- ahosz21_tab1[-nrow(ahosz21_tab1),c(1,2,4,6,8,10,12)]
names(ahosz21_tab1) <- c('year', 'CDU', 'SPD', 'CSU', 'FDP', 'GRUENE', 'LINKE')
ahosz21_tab1 <- ahosz21_tab1[which(ahosz21_tab1$year %in% c(1994, 1998, 2002, 2005, 2009, 2013)),]
ahosz21_tab1[,2:7] <- apply(ahosz21_tab1[,2:7], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# ahosz21_tab1[,2:7] <- apply(ahosz21_tab1[,2:7], 2,
#                             function(x) as.numeric(gsub('\\.','',as.character(x))))
csu <- ahosz21_tab1$CSU  # save CSU for later
ahosz21_tab1$CDU <- ahosz21_tab1$CDU + ahosz21_tab1$CSU # add up CDU and CSU
ahosz21_tab1 <- ahosz21_tab1[,-4] # drop CSU
names(ahosz21_tab1)[2] <- 'CDU/CSU' # rename CDU variable to CDU/CSU
ahosz21_tab1 <- reshape(ahosz21_tab1,
varying = c('CDU/CSU', 'SPD', 'FDP', 'GRUENE', 'LINKE'),
v.names = 'members', direction = 'long',
times = c('CDU/CSU', 'SPD', 'FDP', 'GRUENE', 'LINKE'))
ahosz21_tab1 <- ahosz21_tab1[,1:3]
rownames(ahosz21_tab1) <- 1:nrow(ahosz21_tab1)
names(ahosz21_tab1)[2] <-'party'
ahosz21_tab1$state = 'national'
exp <- merge(exp, ahosz21_tab1, by = c('party', 'year', 'state'), all.x = TRUE)
# add CDU mebers by state
cdu <- read.csv2('data/AHOSZ21_tab3-4.csv', skip = 1, sep = ',', na.strings = '-',
fileEncoding = 'ISO-8859-15', dec = '.') # will treat . as decimal point althoug it is not, see below
cdu <- cdu[-c(nrow(cdu)-1, nrow(cdu)),]
cdu <- cdu[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
cdu[,2:ncol(cdu)] <- apply(cdu[,2:ncol(cdu)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# cdu[,2:ncol(cdu)] <- apply(cdu[,2:ncol(cdu)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
cdu[which(cdu$X == 'BY'),2:ncol(cdu)] <- csu # substitute csu for BY
cdu$X <- as.character(cdu$X) # change NS to NI
cdu[which(cdu$X == 'NS'), 'X'] <- 'NI'
cdu$X <- factor(cdu$X)
cdu <- reshape(cdu, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(cdu) <- 1:nrow(cdu)
cdu <- cdu[, 1:3]
names(cdu) <- c('state', 'year', 'members')
cdu$party <- 'CDU/CSU'
exp <- merge(exp, cdu, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'CDU/CSU' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'CDU/CSU' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add SPD members by state
spd <- read.csv2('data/AHOSZ21_tab5-6.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
spd <- spd[-nrow(spd),]
spd <- spd[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
spd[,2:ncol(spd)] <- apply(spd[,2:ncol(spd)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# spd[,2:ncol(spd)] <- apply(spd[,2:ncol(spd)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
spd$X <- as.character(spd$X) # change NS to NI
spd[which(spd$X == 'NS'), 'X'] <- 'NI'
spd$X <- factor(spd$X)
spd <- reshape(spd, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(spd) <- 1:nrow(spd)
spd <- spd[, 1:3]
names(spd) <- c('state', 'year', 'members')
spd$party <- 'SPD'
exp <- merge(exp, spd, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'SPD' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'SPD' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add FDP members by state
fdp <- read.csv2('data/AHOSZ21_tab7-8.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
fdp <- fdp[-c(nrow(fdp)-1, nrow(fdp)),]
fdp <- fdp[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
fdp[,2:ncol(fdp)] <- apply(fdp[,2:ncol(fdp)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# fdp[,2:ncol(fdp)] <- apply(fdp[,2:ncol(fdp)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
fdp$X <- as.character(fdp$X) # change NS to NI
fdp[which(fdp$X == 'NS'), 'X'] <- 'NI'
fdp$X <- factor(fdp$X)
fdp <- reshape(fdp, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(fdp) <- 1:nrow(fdp)
fdp <- fdp[, 1:3]
names(fdp) <- c('state', 'year', 'members')
fdp$party <- 'FDP'
exp <- merge(exp, fdp, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'FDP' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'FDP' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add GRUENE members  by state
gruene <- read.csv2('data/AHOSZ21_tab5-6.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
gruene <- gruene[-nrow(gruene),]
gruene <- gruene[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
gruene[,2:ncol(gruene)] <- apply(gruene[,2:ncol(gruene)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# gruene[,2:ncol(gruene)] <- apply(gruene[,2:ncol(gruene)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
gruene$X <- as.character(gruene$X) # change NS to NI
gruene[which(gruene$X == 'NS'), 'X'] <- 'NI'
gruene$X <- factor(gruene$X)
gruene <- reshape(gruene, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(gruene) <- 1:nrow(gruene)
gruene <- gruene[, 1:3]
names(gruene) <- c('state', 'year', 'members')
gruene$party <- 'GRUENE'
exp <- merge(exp, gruene, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'GRUENE' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'GRUENE' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add Linke members by state
linke <- read.csv2('data/AHOSZ21_tab7-8.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
linke <- linke[-c(nrow(linke)-1, nrow(linke)),]
linke <- linke[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
linke[,2:ncol(linke)] <- apply(linke[,2:ncol(linke)], 2,
function(x) x*1000) # make numeric
# linke[,2:ncol(linke)] <- apply(linke[,2:ncol(linke)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
linke$X <- as.character(linke$X) # change NS to NI
linke[which(linke$X == 'NS'), 'X'] <- 'NI'
linke$X <- factor(linke$X)
linke <- reshape(linke, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(linke) <- 1:nrow(linke)
linke <- linke[, 1:3]
names(linke) <- c('state', 'year', 'members')
linke$party <- 'LINKE'
exp <- merge(exp, linke, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'LINKE' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'LINKE' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add national members to total
exp[which(exp$state == 'total'), 'members'] <-
merge(exp[which(exp$state == 'total'), ], exp[which(exp$state == 'total'), ],
by = c('party', 'year'))
# save data
write.csv(exp, 'data/Expenditures_ver8_formatted.csv')
# write.csv(exp, 'data/Expenditures_ver8_members.csv')
library(gdata)
?rename
library(plyr)
#libraries
# library(gdata)
library(car)
library(plyr)
# setwd
setwd('/home/arndt/Dropbox/01 PhD/02 projects/rechenschaftsberichte')
# open data
# exp <- read.csv('data/Expenditures_ver8_formatted.csv')
exp <- read.csv2('data/Expenditures_ver8.csv', sep = ',', stringsAsFactors = F)
# format data
exp$voteshare <- as.numeric(sub('%', '', exp$voteshare)) # make vote share numeric
exp$pop_all <- gsub(',', '', exp$pop_all)
exp[, c('exp_nom', 'exp_real', 'exp_capita_nom', 'exp_capita_real',
'infl_factor_2013', 'pop_all', 'pop_eligible', 'exp_voter', 'real_gdpgro_stat')] <- apply(exp[,c('exp_nom', 'exp_real', 'exp_capita_nom',
'exp_capita_real', 'infl_factor_2013',
'pop_all', 'pop_eligible', 'exp_voter',
'real_gdpgro_stat')],
2, as.numeric)
exp$party <- factor(exp$party)
exp$state <- factor(exp$state)
# add party colors
exp$color <- as.character('black') # CDU
exp$color[which(exp$party == 'FDP')] <- 'yellow' # FDP
exp$color[which(exp$party == 'GRUENE')] <- 'green' # GRUENE
exp$color[which(exp$party == 'LINKE')] <- 'purple' # LINKE
exp$color[which(exp$party == 'SPD')] <- 'red' # SPD
# correct state names
exp$state <- as.character(exp$state)
exp[which(exp$state == 'bay'), 'state'] <- 'BY'
exp[which(exp$state == 'ber'), 'state'] <- 'BE'
exp[which(exp$state == 'bra'), 'state'] <- 'BB'
exp[which(exp$state == 'bre'), 'state'] <- 'HB'
exp[which(exp$state == 'bw'), 'state'] <- 'BW'
exp[which(exp$state == 'ham'), 'state'] <- 'HH'
exp[which(exp$state == 'hes'), 'state'] <- 'HE'
exp[which(exp$state == 'mv'), 'state'] <- 'MV'
exp[which(exp$state == 'nie'), 'state'] <- 'NI'
exp[which(exp$state == 'nrw'), 'state'] <- 'NW'
exp[which(exp$state == 'rp'), 'state'] <- 'RP'
exp[which(exp$state == 'sa'), 'state'] <- 'SL'
exp[which(exp$state == 'saar'), 'state'] <- 'SN'
exp[which(exp$state == 'sax'), 'state'] <- 'ST'
exp[which(exp$state == 'sh'), 'state'] <- 'SH'
exp[which(exp$state == 'thu'), 'state'] <- 'TH'
exp$state <- factor(exp$state)
# datakey
# datakey <- data.frame(varnames = names(exp), description = '') # create datakey
# write.csv(datakey, 'data/datakey.csv', quote = T)
# Rescaled variables
exp$exp_realT <- exp$exp_real/1000
exp$exp_realM <- exp$exp_real/1000000
# add party members (national)
ahosz21_tab1 <- read.csv2('data/AHOSZ21_tab1.csv', skip = 2, sep = ',',
fileEncoding = 'ISO-8859-15', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
ahosz21_tab1 <- ahosz21_tab1[-nrow(ahosz21_tab1),c(1,2,4,6,8,10,12)]
names(ahosz21_tab1) <- c('year', 'CDU', 'SPD', 'CSU', 'FDP', 'GRUENE', 'LINKE')
ahosz21_tab1 <- ahosz21_tab1[which(ahosz21_tab1$year %in% c(1994, 1998, 2002, 2005, 2009, 2013)),]
ahosz21_tab1[,2:7] <- apply(ahosz21_tab1[,2:7], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# ahosz21_tab1[,2:7] <- apply(ahosz21_tab1[,2:7], 2,
#                             function(x) as.numeric(gsub('\\.','',as.character(x))))
csu <- ahosz21_tab1$CSU  # save CSU for later
ahosz21_tab1$CDU <- ahosz21_tab1$CDU + ahosz21_tab1$CSU # add up CDU and CSU
ahosz21_tab1 <- ahosz21_tab1[,-4] # drop CSU
names(ahosz21_tab1)[2] <- 'CDU/CSU' # rename CDU variable to CDU/CSU
ahosz21_tab1 <- reshape(ahosz21_tab1,
varying = c('CDU/CSU', 'SPD', 'FDP', 'GRUENE', 'LINKE'),
v.names = 'members', direction = 'long',
times = c('CDU/CSU', 'SPD', 'FDP', 'GRUENE', 'LINKE'))
ahosz21_tab1 <- ahosz21_tab1[,1:3]
rownames(ahosz21_tab1) <- 1:nrow(ahosz21_tab1)
names(ahosz21_tab1)[2] <-'party'
ahosz21_tab1$state = 'national'
exp <- merge(exp, ahosz21_tab1, by = c('party', 'year', 'state'), all.x = TRUE)
# add CDU mebers by state
cdu <- read.csv2('data/AHOSZ21_tab3-4.csv', skip = 1, sep = ',', na.strings = '-',
fileEncoding = 'ISO-8859-15', dec = '.') # will treat . as decimal point althoug it is not, see below
cdu <- cdu[-c(nrow(cdu)-1, nrow(cdu)),]
cdu <- cdu[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
cdu[,2:ncol(cdu)] <- apply(cdu[,2:ncol(cdu)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# cdu[,2:ncol(cdu)] <- apply(cdu[,2:ncol(cdu)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
cdu[which(cdu$X == 'BY'),2:ncol(cdu)] <- csu # substitute csu for BY
cdu$X <- as.character(cdu$X) # change NS to NI
cdu[which(cdu$X == 'NS'), 'X'] <- 'NI'
cdu$X <- factor(cdu$X)
cdu <- reshape(cdu, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(cdu) <- 1:nrow(cdu)
cdu <- cdu[, 1:3]
names(cdu) <- c('state', 'year', 'members')
cdu$party <- 'CDU/CSU'
exp <- merge(exp, cdu, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'CDU/CSU' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'CDU/CSU' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add SPD members by state
spd <- read.csv2('data/AHOSZ21_tab5-6.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
spd <- spd[-nrow(spd),]
spd <- spd[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
spd[,2:ncol(spd)] <- apply(spd[,2:ncol(spd)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# spd[,2:ncol(spd)] <- apply(spd[,2:ncol(spd)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
spd$X <- as.character(spd$X) # change NS to NI
spd[which(spd$X == 'NS'), 'X'] <- 'NI'
spd$X <- factor(spd$X)
spd <- reshape(spd, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(spd) <- 1:nrow(spd)
spd <- spd[, 1:3]
names(spd) <- c('state', 'year', 'members')
spd$party <- 'SPD'
exp <- merge(exp, spd, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'SPD' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'SPD' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add FDP members by state
fdp <- read.csv2('data/AHOSZ21_tab7-8.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
fdp <- fdp[-c(nrow(fdp)-1, nrow(fdp)),]
fdp <- fdp[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
fdp[,2:ncol(fdp)] <- apply(fdp[,2:ncol(fdp)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# fdp[,2:ncol(fdp)] <- apply(fdp[,2:ncol(fdp)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
fdp$X <- as.character(fdp$X) # change NS to NI
fdp[which(fdp$X == 'NS'), 'X'] <- 'NI'
fdp$X <- factor(fdp$X)
fdp <- reshape(fdp, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(fdp) <- 1:nrow(fdp)
fdp <- fdp[, 1:3]
names(fdp) <- c('state', 'year', 'members')
fdp$party <- 'FDP'
exp <- merge(exp, fdp, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'FDP' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'FDP' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add GRUENE members  by state
gruene <- read.csv2('data/AHOSZ21_tab5-6.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
gruene <- gruene[-nrow(gruene),]
gruene <- gruene[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
gruene[,2:ncol(gruene)] <- apply(gruene[,2:ncol(gruene)], 2,
function(x) x*1000) # correct wrong decimal point by multipying with 1000
# gruene[,2:ncol(gruene)] <- apply(gruene[,2:ncol(gruene)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
gruene$X <- as.character(gruene$X) # change NS to NI
gruene[which(gruene$X == 'NS'), 'X'] <- 'NI'
gruene$X <- factor(gruene$X)
gruene <- reshape(gruene, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(gruene) <- 1:nrow(gruene)
gruene <- gruene[, 1:3]
names(gruene) <- c('state', 'year', 'members')
gruene$party <- 'GRUENE'
exp <- merge(exp, gruene, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'GRUENE' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'GRUENE' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add Linke members by state
linke <- read.csv2('data/AHOSZ21_tab7-8.csv', skip = 1, sep = ',', na.strings = '-',
dec = '.') # will treat . as decimal point althoug it is not, see below
linke <- linke[-c(nrow(linke)-1, nrow(linke)),]
linke <- linke[, c('X', 'X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013')] # subset to relevant
linke[,2:ncol(linke)] <- apply(linke[,2:ncol(linke)], 2,
function(x) x*1000) # make numeric
# linke[,2:ncol(linke)] <- apply(linke[,2:ncol(linke)], 2,
#                            function(x) as.numeric(sub('\\.','',x))) # make numeric
linke$X <- as.character(linke$X) # change NS to NI
linke[which(linke$X == 'NS'), 'X'] <- 'NI'
linke$X <- factor(linke$X)
linke <- reshape(linke, varying = c('X1994', 'X1998', 'X2002', 'X2005', 'X2009', 'X2013'),
v.names = 'members', direction = 'long',
times = c(1994, 1998, 2002, 2005, 2009, 2013))
rownames(linke) <- 1:nrow(linke)
linke <- linke[, 1:3]
names(linke) <- c('state', 'year', 'members')
linke$party <- 'LINKE'
exp <- merge(exp, linke, by = c('party', 'year', 'state'), all.x = TRUE)
exp$members.x[which(exp$party == 'LINKE' & exp$state != 'national')] <-
exp$members.y[which(exp$party == 'LINKE' & exp$state != 'national')]
exp <- rename(exp, c("members.x" = "members"))
exp$members.y <- NULL
# add national members to total
exp[which(exp$state == 'total'), 'members'] <-
merge(exp[which(exp$state == 'total'), ], exp[which(exp$state == 'total'), ],
by = c('party', 'year'))
# save data
write.csv(exp, 'data/Expenditures_ver8_formatted.csv')
# write.csv(exp, 'data/Expenditures_ver8_members.csv')
write.csv(exp, 'data/Expenditures_ver8_members.csv')
View(exp)
exp[which(exp$state == 'total'), 'members']
merge(exp[which(exp$state == 'total'), ], exp[which(exp$state == 'total'), ],
by = c('party', 'year'))
exp[which(exp$state == 'total'), ]
exp[which(exp$state == 'total'), ]
exp[which(exp$state == 'total'), ]
exp[which(exp$state == 'total'), 'members'] <-
exp[which(exp$state == 'national'), 'members']
ggplot(exp[which(exp$state == 'total'),], aes(x = year, y = members/1000,
colour = party)) +
geom_line(size = 1) + ylab('Parteimitglieder (Tausend)') + xlab('Jahr') +
scale_colour_manual(values = c('black', 'gold', 'darkgreen', 'purple', 'red')) +
theme(legend.position = 'bottom')
f_exp_member_total <- ggplot(exp[which(exp$state == 'total'),], aes(x = year,
y = (exp_real/members),
colour = party)) +
geom_line(size = 1) + ylab('Ausgaben pro Mitglied in Euro') + xlab('Jahr') +
scale_colour_manual(values = c('black', 'gold', 'darkgreen', 'purple', 'red')) +
theme(legend.position = 'bottom')
f_exp_member_total
write.csv(exp, 'data/Expenditures_ver8_members.csv')
exp$exp_member <- exp$exp_real / exp$members
write.csv(exp, 'data/Expenditures_ver8_members.csv')
install.packages('rgdal')
setwd('C:/Users/a.leininger/Dropbox/01 PhD/R/spatial')
library(rgdal)
sport <- readOGR(dsn = ".", "london_sport")
names(sport)
sport
proj4string(sport) <- CRS("+init=epsg:27700")
library(ggplot2)
ggplot(sport@data, aes(Partic_Per, Pop_2001))
ggplot(sport@data, aes(Partic_Per, Pop_2001)) + geom_point()
library(gpclib)
install.packages('gpclib')
install.packages('rgeos')
sport.f <- fortify(sport, region = "ons_label")
install.packages('maptools')
library(maptools)
sport.f <- fortify(sport, region = "ons_label")
sport.f <- merge(sport.f, sport@data, by.x = "id", by.y = "ons_label")
head(sport.f[, 1:8])
ggplot(sport.f, aes(long, lat, group = group, fill = Partic_Per)) + geom_polygon() +
coord_equal() + labs(x = "Easting (m)", y = "Northing (m)", fill = "% Sport Partic.") +
ggtitle("London Sports Participation")
URL <- c('http://www.bfs.admin.ch/bfs/portal/de/index/themen/17/03/blank/key/2015/012.Document.191327.xls')
library(foreign)
library(foreign)
library(gdata)
installXLSXsupport()
d <- read.csv('energieinitiative.csv')
d <- read.csv('C:/Users/a.leininger/Dropbox/01 PhD/02 Projects/abst15/energieinitiative.csv')
View(d)
map <- readOGR(dsn = "C:/Users/a.leininger/Dropbox/01 PhD/02 Projects/abst15/", "Kantone")
setwd('C:/Users/a.leininger/Dropbox/01 PhD/02 Projects/abst15/')
map <- readOGR(dsn = ".", "Kantone")
names(sport)
names(Kantone)
names(map)
head(map)
map
head(sport.f)
names(map)
kantone <- fortify(map, region = 'KT')
head(kantone)
kantone <- fortify(map, region = 'Name')
head(kantone)
str(kantone)
d
kantone.p <- marge(kantone, by.x = 'id', by.y = 'canton')
kantone.p <- merge(kantone, by.x = 'id', by.y = 'canton')
kantone.p <- merge(kantone, kantone, by.x = 'id', by.y = 'canton')
kantone.p <- merge(kantone, d, by.x = 'id', by.y = 'canton')
head(kantone.p)
ggplot(kantone.p, aes(long, lat, group = group, fill = yesperc)) + geom_polygon() +
coord_equal() + labs(x = NULL, y = NULL, fill = "% YES") +
ggtitle("Energiesteuer")
kantone.p <- merge(kantone, d, by.x = 'id', by.y = 'canton', all.x = TRUE)
ggplot(kantone.p, aes(long, lat, group = group, fill = yesperc)) + geom_polygon() +
coord_equal() + labs(x = NULL, y = NULL, fill = "% YES") +
ggtitle("Energiesteuer")
?order
d
d <- d[order(d$canton),]
d
d$id <- 1:nrow(d)
d
head(kantone)
tail(kantone)
kantone <- kantone[order(kantone$id),]
str(kantone)
unique(id)
unique(kantone$id)
kantone$idnum <- as.numeric(kantone$id)
head(kantone)
kantone$idnum <- as.numeric(factor(kantone$id))
head(kantone)
tail(kantone)
kantone$idnum <- as.numeric(factor(kantone$id))
d
kantone.p <- merge(kantone, d, by.x = 'idnum', by.y = 'id', all.x = TRUE)
ggplot(kantone.p, aes(long, lat, group = group, fill = yesperc)) + geom_polygon() +
coord_equal() + labs(x = NULL, y = NULL, fill = "% YES") +
ggtitle("Energiesteuer")
